name: Publish on Tag

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write   # allow publishing to Releases

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: apps/web
        run: npm install

      - name: Sync version with tag
        working-directory: apps/web
        run: |
          echo "Setting package.json version to ${{ github.ref_name }}"
          npm version --no-git-tag-version ${{ github.ref_name }}

      - name: Build frontend
        working-directory: apps/web
        run: npm run build

      - name: Install ImageMagick
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update
            sudo apt-get install -y imagemagick icnsutils
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install imagemagick icnsutils
          fi

      - name: Generate app icons
        run: |
          mkdir -p build/icons
          cp craftedjewelsicon.png build/icons/craftedjewelsicon.png
          
          # Generate ICNS for macOS
          sips -z 512 512 build/icons/craftedjewelsicon.png --out build/icons/craftedjewelsicon-512.png
          iconutil -c icns --output build/icons/craftedjewelsicon.icns build/icons/
          
          # Generate ICO for Windows
          convert build/icons/craftedjewelsicon.png -define icon:auto-resize=256,128,64,48,32,16 build/icons/craftedjewelsicon.ico

      - name: Build & Publish
        working-directory: apps/web
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        run: npx electron-builder --config ../../electron-builder.yml --publish always



