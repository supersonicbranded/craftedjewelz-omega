name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # needed to upload assets to Releases

env:
  # Path to your base PNG logo already in the repo
  BASE_ICON: apps/web/build/appicon2.png
  ICONS_DIR: apps/web/build/icons

jobs:
  # Generate .icns and .ico ONCE on Ubuntu and share to all matrix builds
  prepare-assets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure base icon exists
        run: |
          if [ ! -f "${BASE_ICON}" ]; then
            echo "Base icon not found at ${BASE_ICON}"; exit 1;
          fi

      - name: Install icon tooling
        run: |
          sudo apt-get update
          sudo apt-get install -y icnsutils imagemagick

      - name: Make icons directory
        run: mkdir -p "${ICONS_DIR}"

      - name: Generate .icns and .ico from PNG
        run: |
          # Create .icns
          png2icns "${ICONS_DIR}/appicon.icns" "${BASE_ICON}"
          # Create .ico (256x256) for Windows
          convert "${BASE_ICON}" -resize 256x256 "${ICONS_DIR}/appicon.ico"

      - name: Upload icons artifact
        uses: actions/upload-artifact@v4
        with:
          name: craftedjewelz-icons
          path: apps/web/build/icons

  build:
    needs: prepare-assets
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download icons artifact
        uses: actions/download-artifact@v4
        with:
          name: craftedjewelz-icons
          path: apps/web/build/icons

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install
        working-directory: apps/web

      # Keep package.json version in sync with tag vX.Y.Z (cross-platform via Node)
      - name: Sync version from tag
        working-directory: apps/web
        run: |
          node -e "const fs=require('fs');const p=JSON.parse(fs.readFileSync('package.json','utf8'));const ref=process.env.GITHUB_REF||'';const m=ref.match(/refs\/tags\/v(.+)/);if(!m){console.error('No v* tag found in GITHUB_REF');process.exit(1)};p.version=m[1];fs.writeFileSync('package.json',JSON.stringify(p,null,2));console.log('Set version to',p.version);"

      - name: Verify icons present
        run: |
          ls -la apps/web/build/icons || true
          test -f apps/web/build/icons/appicon.icns
          test -f apps/web/build/icons/appicon.ico

      - name: Build & Publish installers
        run: npx electron-builder --publish always
        working-directory: apps/web
        env:
          # IMPORTANT: Use a Personal Access Token (PAT), not the default GITHUB_TOKEN.
          GH_TOKEN: ${{ secrets.GH_TOKEN }}



